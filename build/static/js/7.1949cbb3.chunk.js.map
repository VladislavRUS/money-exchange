{"version":3,"sources":["components/Dropdown/Dropdown.tsx","components/Select/Select.styles.ts","components/Select/BaseItem/BaseItem.styles.ts","components/Select/BaseItem/BaseItem.tsx","components/Select/TextItem/TextItem.styles.ts","components/Select/TextItem/TextItem.tsx","components/Select/Select.tsx","components/Select/index.ts","views/Home/NavigationSidebar/NavigationSidebar.styles.ts","views/Home/NavigationSidebar/UserInformation/UserInformation.styles.ts","views/Home/NavigationSidebar/UserInformation/UserInformation.tsx","views/Home/NavigationSidebar/Links/Links.styles.ts","views/Home/NavigationSidebar/Links/Links.tsx","views/Home/NavigationSidebar/LanguageSelect/LanguageSelect.styles.ts","views/Home/NavigationSidebar/LanguageSelect/LanguageSelect.tsx","views/Home/NavigationSidebar/NavigationSidebar.tsx","views/Home/Home.styles.ts","views/Home/Home.tsx","views/Home/index.ts"],"names":["Dropdown","elementRef","targetRef","handleClick","event","current","contains","target","props","onClickOutside","renderElement","ref","isOpened","content","renderTarget","children","this","document","addEventListener","removeEventListener","attachment","React","Component","slideIn","keyframes","Wrapper","styled","div","width","BaseItem","onClick","item","renderContent","PureComponent","Text","TextItem","text","Select","Avatar","avatarUrl","FullName","Company","Demo","translated","withTranslation","connect","state","user","isDemo","t","firstName","lastName","company","LinkContent","StyledNavLink","NavLink","links","to","Routes","ACCOUNTS","nameTranslationKey","CARDS","map","link","key","flagsMap","ru","en","CurrentLanguage","language","LanguageSelect","onOpenSelect","setState","onCloseSelect","onLanguageSelect","i18n","changeLanguage","Fragment","NavigationSidebar","PageWrapper","Page","Accounts","lazy","Cards","Exchange","Home","fallback","path","component","EXCHANGE"],"mappings":"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","file":"static/js/7.1949cbb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport TetherComponent from 'react-tether';\r\n\r\ninterface IDropdownProps {\r\n  isOpened: boolean;\r\n  children: (ref: React.RefObject<HTMLElement>) => React.ReactNode;\r\n  content: (ref: React.RefObject<HTMLElement>) => React.ReactNode;\r\n  onClickOutside?: () => void;\r\n  attachment?: string;\r\n}\r\n\r\nclass Dropdown extends React.Component<IDropdownProps> {\r\n  elementRef: React.RefObject<HTMLElement> | null = null;\r\n  targetRef: React.RefObject<HTMLElement> | null = null;\r\n\r\n  componentDidUpdate(): void {\r\n    if (this.props.isOpened) {\r\n      document.addEventListener('click', this.handleClick);\r\n    } else {\r\n      document.removeEventListener('click', this.handleClick);\r\n    }\r\n  }\r\n\r\n  handleClick = (event: MouseEvent) => {\r\n    if (this.targetRef && this.targetRef.current && this.targetRef.current.contains(event.target as any)) {\r\n      return;\r\n    }\r\n\r\n    if (this.elementRef && this.elementRef.current && this.elementRef.current.contains(event.target as any)) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.onClickOutside) {\r\n      this.props.onClickOutside();\r\n    }\r\n  };\r\n\r\n  renderElement = (ref: any) => {\r\n    if (!this.props.isOpened) {\r\n      return null;\r\n    }\r\n\r\n    this.elementRef = ref;\r\n    return this.props.content(ref);\r\n  };\r\n\r\n  renderTarget = (ref: any) => {\r\n    this.targetRef = ref;\r\n    return this.props.children(ref);\r\n  };\r\n\r\n  render() {\r\n    const { attachment = 'top center' } = this.props;\r\n\r\n    return (\r\n      <TetherComponent attachment={attachment} renderTarget={this.renderTarget} renderElement={this.renderElement} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst slideIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(25%);\r\n  }\r\n  \r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div<{ width: number }>`\r\n  margin-top: 8px;\r\n  width: ${props => props.width}px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 10px -2px rgba(0, 0, 0, 0.3);\r\n  animation: ${slideIn} 0.2s ease;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 20px 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './BaseItem.styles';\r\n\r\ninterface IBaseItemProps<T> {\r\n  item: T;\r\n  renderContent: (item: T) => React.ReactNode;\r\n  onClick: (item: T) => void;\r\n}\r\n\r\nclass BaseItem<T> extends React.PureComponent<IBaseItemProps<T>> {\r\n  onClick = () => {\r\n    this.props.onClick(this.props.item);\r\n  };\r\n\r\n  render() {\r\n    const { item, renderContent } = this.props;\r\n\r\n    return <Wrapper onClick={this.onClick}>{renderContent(item)}</Wrapper>;\r\n  }\r\n}\r\n\r\nexport default BaseItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const Text = styled.div`\r\n  font-size: 14px;\r\n  color: #000;\r\n`;\r\n","import React from 'react';\r\nimport { BaseItem } from '../BaseItem';\r\nimport { Text } from './TextItem.styles';\r\n\r\ninterface ITextItemProps {\r\n  text: string;\r\n  onClick: (text: string) => void;\r\n}\r\n\r\nconst TextItem: React.FC<ITextItemProps> = ({ text, onClick }) => (\r\n  <BaseItem item={text} onClick={onClick} renderContent={item => <Text>{item}</Text>} />\r\n);\r\n\r\nexport default TextItem;\r\n","import React from 'react';\r\nimport { Dropdown } from '../Dropdown';\r\nimport { Wrapper } from './Select.styles';\r\nimport { TextItem } from './TextItem';\r\n\r\ntype TDropdownProps = React.ComponentProps<typeof Dropdown>;\r\n\r\ninterface ISelectProps {\r\n  content: () => React.ReactNode;\r\n  width?: number;\r\n}\r\n\r\ntype TProps = ISelectProps & TDropdownProps;\r\n\r\nclass Select extends React.Component<TProps> {\r\n  static TextItem = TextItem;\r\n\r\n  renderContent = (ref: any) => {\r\n    const { content, width = 100 } = this.props;\r\n\r\n    return (\r\n      <Wrapper ref={ref} width={width}>\r\n        {content()}\r\n      </Wrapper>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isOpened, children, onClickOutside, ...props } = this.props;\r\n\r\n    return (\r\n      <Dropdown {...props} isOpened={isOpened} content={this.renderContent} onClickOutside={onClickOutside}>\r\n        {ref => children(ref)}\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import Select from './Select';\r\n\r\nexport { Select };\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 256px;\r\n  height: 100%;\r\n  background-color: #fafafa;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 32px;\r\n`;\r\n\r\nexport const Avatar = styled.div<{ avatarUrl: string }>`\r\n  margin-bottom: 16px;\r\n  width: 64px;\r\n  height: 64px;\r\n  background-image: url(${props => props.avatarUrl});\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const FullName = styled.div`\r\n  font-size: 16px;\r\n  color: #000;\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const Company = styled.div`\r\n  font-size: 16px;\r\n  color: rgb(139, 149, 158);\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const Demo = styled.div`\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  margin-top: 8px;\r\n  background-color: rgb(206, 213, 219);\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n  border-radius: 24px;\r\n  padding: 4px 12px;\r\n  line-height: 16px;\r\n  letter-spacing: 1px;\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, Avatar, FullName, Company, Demo } from './UserInformation.styles';\r\nimport { IApplicationState } from '../../../../store';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\n\r\nconst mapStateToProps = (state: IApplicationState) => ({\r\n  user: state.user.current,\r\n  isDemo: state.user.isDemo,\r\n});\r\n\r\ntype TStateProps = ReturnType<typeof mapStateToProps>;\r\n\r\ntype TProps = TStateProps & WithTranslation;\r\n\r\nconst UserInformation: React.FC<TProps> = ({ user, isDemo, t }) => (\r\n  <Wrapper>\r\n    <Avatar avatarUrl={user.avatarUrl} />\r\n    <FullName>{user.firstName + ' ' + user.lastName}</FullName>\r\n    <Company>{user.company}</Company>\r\n    {isDemo && <Demo>{t('app.demoAccount')}</Demo>}\r\n  </Wrapper>\r\n);\r\n\r\nconst translated = withTranslation();\r\nconst ConnectedUserInformation = connect(mapStateToProps)(UserInformation);\r\n\r\nexport default translated(ConnectedUserInformation);\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  padding-top: 100px;\r\n`;\r\n\r\nexport const LinkContent = styled.div`\r\n  height: 56px;\r\n  line-height: 56px;\r\n  padding-left: 32px;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  color: #8b959e;\r\n  border-left: 2px solid transparent;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  text-decoration: none;\r\n\r\n  &.active {\r\n    ${LinkContent} {\r\n      border-left: 2px solid #eb008d;\r\n      color: #191c1e;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, LinkContent, StyledNavLink } from './Links.styles';\r\nimport { Routes } from '../../../../constants/Routes';\r\n\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\n\r\nconst links = [\r\n  {\r\n    to: Routes.ACCOUNTS,\r\n    nameTranslationKey: 'app.links.accounts',\r\n  },\r\n  {\r\n    to: Routes.CARDS,\r\n    nameTranslationKey: 'app.links.cards',\r\n  },\r\n];\r\n\r\nconst Links: React.FC<WithTranslation> = ({ t }) => (\r\n  <Wrapper>\r\n    {links.map(link => (\r\n      <StyledNavLink to={link.to} key={link.to}>\r\n        <LinkContent>{t(link.nameTranslationKey)}</LinkContent>\r\n      </StyledNavLink>\r\n    ))}\r\n  </Wrapper>\r\n);\r\n\r\nconst translated = withTranslation();\r\n\r\nexport default translated(Links);\r\n","import styled from 'styled-components';\n\nconst flagsMap: { [key: string]: string } = {\n  ru: 'russia',\n  en: 'united-kingdom',\n};\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const CurrentLanguage = styled.div<{ language: string }>`\n  display: inline-block;\n  cursor: pointer;\n  background-size: cover;\n  width: 30px;\n  height: 30px;\n\n  background-image: url(${props =>\n    `https://cdn.countryflags.com/thumbs/${flagsMap[props.language]}/flag-round-250.png`});\n`;\n","import React from 'react';\nimport { Wrapper, CurrentLanguage } from './LanguageSelect.styles';\nimport { Select } from '../../../../components/Select';\nimport { i18n } from '../../../../i18n';\n\ntype TState = {\n  isOpened: boolean;\n};\n\nclass LanguageSelect extends React.Component<any, TState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isOpened: false,\n    };\n  }\n\n  onOpenSelect = () => {\n    this.setState({ isOpened: true });\n  };\n\n  onCloseSelect = () => {\n    this.setState({ isOpened: false });\n  };\n\n  onLanguageSelect = (language: string) => {\n    i18n.changeLanguage(language);\n    this.onCloseSelect();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Select.TextItem text={'Русский'} onClick={() => this.onLanguageSelect('ru')} />\n        <Select.TextItem text={'English'} onClick={() => this.onLanguageSelect('en')} />\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Select\n          content={this.renderContent}\n          isOpened={this.state.isOpened}\n          onClickOutside={this.onCloseSelect}\n          attachment={'bottom left'}\n        >\n          {ref => <CurrentLanguage ref={ref as any} onClick={this.onOpenSelect} language={i18n.language} />}\n        </Select>\n      </Wrapper>\n    );\n  }\n}\n\nexport default LanguageSelect;\n","import React from 'react';\r\nimport { Wrapper } from './NavigationSidebar.styles';\r\nimport { UserInformation } from './UserInformation';\r\nimport { Links } from './Links';\r\nimport { LanguageSelect } from './LanguageSelect';\r\n\r\nconst NavigationSidebar = () => (\r\n  <Wrapper>\r\n    <UserInformation />\r\n    <Links />\r\n    <LanguageSelect />\r\n  </Wrapper>\r\n);\r\n\r\nexport default NavigationSidebar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PageWrapper = styled.div`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  padding-top: 32px;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n`;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { NavigationSidebar } from './NavigationSidebar';\r\nimport { Page, PageWrapper, Wrapper } from './Home.styles';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { Routes } from '../../constants/Routes';\r\nimport { SuspenseFallback } from '../../components/SuspenceFallback';\r\n\r\nconst Accounts = lazy(() => import('../../views/Accounts'));\r\nconst Cards = lazy(() => import('../../views/Cards'));\r\nconst Exchange = lazy(() => import('../../views/Exchange'));\r\n\r\nconst Home = () => (\r\n  <Wrapper>\r\n    <NavigationSidebar />\r\n    <PageWrapper>\r\n      <Page>\r\n        <Suspense fallback={<SuspenseFallback />}>\r\n          <Switch>\r\n            <Route path={Routes.CARDS} component={Cards} />\r\n            <Route path={Routes.EXCHANGE} component={Exchange} />\r\n            <Route path={Routes.ACCOUNTS} component={Accounts} />\r\n            <Redirect to={Routes.ACCOUNTS} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Page>\r\n    </PageWrapper>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Home;\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}