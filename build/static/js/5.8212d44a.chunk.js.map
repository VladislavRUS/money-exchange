{"version":3,"sources":["utils/formatMoneyInLocale.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/InlineNavbar/InlineNavbar.styles.ts","components/InlineNavbar/InlineNavbar.tsx","components/InlineNavbar/index.ts","components/RoundedLink/RoundedLink.styles.ts","components/RoundedLink/RoundedLink.tsx","components/RoundedLink/index.ts","store/currencies/selectors.ts","views/Accounts/Accounts.styles.ts","views/Accounts/Header/Header.styles.ts","views/Accounts/Header/Balance/Balance.styles.ts","components/Buttons/TextButton/TextButton.styles.ts","components/Buttons/TextButton/TextButton.tsx","views/Accounts/Header/Balance/Balance.tsx","store/accounts/selectors.ts","utils/countAccountsInOneCurrency.ts","views/Accounts/Header/Actions/Actions.styles.ts","views/Accounts/Header/Actions/Actions.tsx","views/Accounts/Header/Header.tsx","views/Accounts/Accounts.tsx","views/Accounts/index.ts"],"names":["formatValueInLocale","locale","value","Intl","NumberFormat","useGrouping","minimumFractionDigits","maximumFractionDigits","format","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","TypeError","Wrapper","styled","div","LinkContent","StyledLink","NavLink","InlineNavbar","links","map","link","to","key","exact","title","RoundedLinkLook","props","look","SUCCESS","css","RoundedLink","DEFAULT","children","getCurrencyData","state","currency","currencies","data","NavbarWrapper","Amount","IntegerDigits","FractionDigits","BaseCurrency","Flag","flagImage","BalanceIn","StyledButton","button","Text","color","TextButton","React","forwardRef","ref","onClick","text","Balance","renderContent","accounts","Fragment","account","Select","TextItem","id","setBaseCurrency","onCloseDropdown","onOpenDropdown","setState","isOpened","this","rates","symbol","flag","totalBalance","t","baseCurrency","i18n","language","split","integer","fraction","content","onClickOutside","width","Component","translated","withTranslation","connect","sumInDollars","forEach","countAccountsInOneCurrency","list","getTotalBalance","dispatch","bindActionCreators","Hint","Action","Routes","TOP_UP","size","EXCHANGE","SEND","Header","AccountsList","lazy","Transactions","ACCOUNTS","titleTranslationKey","TRANSACTIONS","fallback","path","component","Accounts"],"mappings":"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","file":"static/js/5.8212d44a.chunk.js","sourcesContent":["export const formatValueInLocale = (locale: string, value: number) =>\n  new Intl.NumberFormat(locale, {\n    useGrouping: true,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  }).format(value);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid rgb(206, 213, 219);\r\n`;\r\n\r\nexport const LinkContent = styled.div`\r\n  font-weight: 400;\r\n  color: rgb(139, 149, 158);\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  height: 58px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -1px;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background-color: rgb(235, 0, 141);\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 32px;\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.active {\r\n    &::after {\r\n      opacity: 1;\r\n    }\r\n\r\n    ${LinkContent} {\r\n      font-weight: 500;\r\n\r\n      color: rgb(25, 28, 31);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, StyledLink, LinkContent } from './InlineNavbar.styles';\r\n\r\nexport interface INavbarLink {\r\n  to: string;\r\n  title: string;\r\n  exact?: boolean;\r\n}\r\n\r\ninterface IInlineNavbarProps {\r\n  links: INavbarLink[];\r\n}\r\n\r\nconst InlineNavbar: React.FC<IInlineNavbarProps> = ({ links }) => (\r\n  <Wrapper>\r\n    {links.map(link => (\r\n      <StyledLink to={link.to} key={link.to} exact={link.exact}>\r\n        <LinkContent>{link.title}</LinkContent>\r\n      </StyledLink>\r\n    ))}\r\n  </Wrapper>\r\n);\r\n\r\nexport default InlineNavbar;\r\n","import InlineNavbar from './InlineNavbar';\r\n\r\nexport { InlineNavbar };\r\n","import styled, { css } from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RoundedLinkLook } from './RoundedLink';\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  text-transform: none;\r\n`;\r\n\r\nexport const LinkContent = styled.div<{ look: RoundedLinkLook }>`\r\n  height: 56px;\r\n  width: 56px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  box-shadow: 0 5px 15px -2px rgba(0, 0, 0, 0.15);\r\n\r\n  ${props =>\r\n    props.look === RoundedLinkLook.SUCCESS &&\r\n    css`\r\n      background-color: rgb(235, 0, 141);\r\n    `};\r\n`;\r\n","import React from 'react';\r\nimport { StyledLink, LinkContent } from './RoundedLink.styles';\r\n\r\nexport enum RoundedLinkLook {\r\n  SUCCESS,\r\n  DEFAULT,\r\n}\r\n\r\ninterface IRoundedLinkProps {\r\n  to: string;\r\n  look?: RoundedLinkLook;\r\n}\r\n\r\nconst RoundedLink: React.FC<IRoundedLinkProps> = ({ to, look = RoundedLinkLook.DEFAULT, children }) => (\r\n  <StyledLink to={to}>\r\n    <LinkContent look={look}>{children}</LinkContent>\r\n  </StyledLink>\r\n);\r\n\r\nexport default RoundedLink;\r\n","import RoundedLink, { RoundedLinkLook } from './RoundedLink';\r\n\r\nexport { RoundedLink, RoundedLinkLook };\r\n","import { IApplicationState } from '../index';\r\n\r\nexport const getCurrencyData = (state: IApplicationState, currency: string) => {\r\n  return state.currencies.data[currency];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const NavbarWrapper = styled.div`\r\n  margin: 24px 0 40px 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  height: 96px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const Amount = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 42px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const IntegerDigits = styled.div`\r\n  color: #191c1e;\r\n`;\r\n\r\nexport const FractionDigits = styled.div`\r\n  color: #8b959e;\r\n`;\r\n\r\nexport const BaseCurrency = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Flag = styled.div<{ flagImage: string }>`\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 16px;\r\n  border-radius: 50%;\r\n  background-image: url(${props => props.flagImage});\r\n  background-size: cover;\r\n`;\r\n\r\nexport const BalanceIn = styled.div`\r\n  font-size: 16px;\r\n  color: #8b959e;\r\n  margin-right: 4px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  display: block;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.div<{ color?: string }>`\r\n  font-size: 16px;\r\n  color: ${props => props.color || 'rgb(0, 117, 235)'};\r\n`;\r\n","import React from 'react';\r\nimport { Text, StyledButton } from './TextButton.styles';\r\n\r\ninterface ITextButtonProps {\r\n  text: string;\r\n  onClick: () => void;\r\n  color?: string;\r\n}\r\n\r\nconst TextButton = React.forwardRef((props: ITextButtonProps, ref?: any) => (\r\n  <StyledButton onClick={props.onClick} ref={ref}>\r\n    <Text color={props.color}>{props.text}</Text>\r\n  </StyledButton>\r\n));\r\n\r\nexport default TextButton;\r\n","import React from 'react';\r\nimport { Wrapper, Amount, BaseCurrency, IntegerDigits, FractionDigits, Flag, BalanceIn } from './Balance.styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { IApplicationState } from '../../../../store';\r\nimport { getTotalBalance } from '../../../../store/accounts/selectors';\r\nimport { i18n } from '../../../../i18n';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { getCurrencyData } from '../../../../store/currencies/selectors';\r\nimport { TextButton } from '../../../../components/Buttons/TextButton';\r\nimport { Select } from '../../../../components/Select';\r\nimport { setBaseCurrency } from '../../../../store/accounts/actions';\r\nimport { formatValueInLocale } from '../../../../utils/formatMoneyInLocale';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      setBaseCurrency,\r\n    },\r\n    dispatch,\r\n  );\r\n\r\ntype TDispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst mapStateToProps = (state: IApplicationState) => {\r\n  const { rates } = state.rates;\r\n  const { symbol, flag } = getCurrencyData(state, state.accounts.baseCurrency);\r\n\r\n  const totalBalance = getTotalBalance(state);\r\n\r\n  return {\r\n    totalBalance,\r\n    symbol,\r\n    flag,\r\n    rates,\r\n    accounts: state.accounts.list,\r\n    baseCurrency: state.accounts.baseCurrency,\r\n  };\r\n};\r\n\r\ntype TStateProps = ReturnType<typeof mapStateToProps>;\r\n\r\ntype TProps = TStateProps & TDispatchProps & WithTranslation;\r\n\r\ntype TState = {\r\n  isOpened: boolean;\r\n};\r\n\r\nclass Balance extends React.Component<TProps, TState> {\r\n  constructor(props: TProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpened: false,\r\n    };\r\n  }\r\n\r\n  renderContent = () => {\r\n    const { accounts } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {accounts.map(account => (\r\n          <Select.TextItem\r\n            key={account.id}\r\n            text={account.currency}\r\n            onClick={() => {\r\n              this.props.setBaseCurrency(account.currency);\r\n              this.onCloseDropdown();\r\n            }}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  onOpenDropdown = () => {\r\n    this.setState({ isOpened: true });\r\n  };\r\n\r\n  onCloseDropdown = () => {\r\n    this.setState({ isOpened: false });\r\n  };\r\n\r\n  render() {\r\n    const { rates, symbol, flag, totalBalance, t, baseCurrency } = this.props;\r\n\r\n    if (!rates) {\r\n      return null;\r\n    }\r\n\r\n    const formattedTotalBalance = formatValueInLocale(i18n.language, totalBalance);\r\n\r\n    const [integer, fraction] = formattedTotalBalance.split('.');\r\n    return (\r\n      <Wrapper>\r\n        <Amount>\r\n          {symbol}\r\n          <IntegerDigits>{integer}</IntegerDigits>\r\n          {fraction && <FractionDigits>.{fraction}</FractionDigits>}\r\n        </Amount>\r\n        <BaseCurrency>\r\n          <Flag flagImage={flag} />\r\n          <BalanceIn>{t('accounts.totalBalance')}</BalanceIn>\r\n          <Select\r\n            content={this.renderContent}\r\n            isOpened={this.state.isOpened}\r\n            onClickOutside={this.onCloseDropdown}\r\n            width={282}\r\n          >\r\n            {(ref: any) => <TextButton text={baseCurrency} onClick={this.onOpenDropdown} ref={ref} />}\r\n          </Select>\r\n        </BaseCurrency>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst translated = withTranslation();\r\nconst ConnectedBalance = connect(mapStateToProps, mapDispatchToProps)(Balance);\r\n\r\nexport default translated(ConnectedBalance);\r\n","import { IApplicationState } from '../index';\r\nimport { countAccountsInOneCurrency } from '../../utils/countAccountsInOneCurrency';\r\n\r\nexport const getTotalBalance = (state: IApplicationState) => {\r\n  const { rates } = state.rates;\r\n\r\n  if (!rates) {\r\n    return 0;\r\n  }\r\n\r\n  return countAccountsInOneCurrency(rates, state.accounts.list, state.accounts.baseCurrency);\r\n};\r\n","import { IRates } from '../store/rates/types';\nimport { IAccount } from '../store/accounts/types';\n\nexport const countAccountsInOneCurrency = (rates: IRates, accounts: IAccount[], baseCurrency: string) => {\n  let sumInDollars = 0;\n\n  accounts.forEach(account => {\n    sumInDollars += account.value * rates[account.currency];\n  });\n\n  return sumInDollars * rates[baseCurrency];\n};\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  width: 208px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Hint = styled.div`\r\n  margin-top: 16px;\r\n  text-align: center;\r\n  color: rgb(206, 213, 219);\r\n  font-size: 12px;\r\n  transition: color 0.2s ease;\r\n`;\r\n\r\nexport const Action = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &:hover {\r\n    ${Hint} {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Wrapper, Action, Hint } from './Actions.styles';\r\nimport { FiArrowRight, FiPlus, FiRefreshCw } from 'react-icons/fi';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { RoundedLink, RoundedLinkLook } from '../../../../components/RoundedLink';\r\nimport { Routes } from '../../../../constants/Routes';\r\n\r\nconst Actions: React.FC<WithTranslation> = ({ t }) => (\r\n  <Wrapper>\r\n    <Action>\r\n      <RoundedLink to={Routes.TOP_UP}>\r\n        <FiPlus size={24} color={'#000'} />\r\n      </RoundedLink>\r\n      <Hint>{t('accounts.hints.topUp')}</Hint>\r\n    </Action>\r\n\r\n    <Action>\r\n      <RoundedLink to={Routes.EXCHANGE}>\r\n        <FiRefreshCw size={24} color={'#000'} />\r\n      </RoundedLink>\r\n      <Hint>{t('accounts.hints.exchange')}</Hint>\r\n    </Action>\r\n    <Action>\r\n      <RoundedLink to={Routes.SEND} look={RoundedLinkLook.SUCCESS}>\r\n        <FiArrowRight size={24} color={'#fff'} />\r\n      </RoundedLink>\r\n      <Hint>{t('accounts.hints.send')}</Hint>\r\n    </Action>\r\n  </Wrapper>\r\n);\r\n\r\nconst translated = withTranslation();\r\n\r\nexport default translated(Actions);\r\n","import React from 'react';\r\nimport { Wrapper } from './Header.styles';\r\nimport { Balance } from './Balance';\r\nimport { Actions } from './Actions';\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Balance />\r\n    <Actions />\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { Wrapper, NavbarWrapper } from './Accounts.styles';\r\nimport { Header } from './Header';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Routes } from '../../constants/Routes';\r\nimport { InlineNavbar } from '../../components/InlineNavbar';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { SuspenseFallback } from '../../components/SuspenceFallback';\r\n\r\nconst AccountsList = lazy(() => import('./AccountsList'));\r\nconst Transactions = lazy(() => import('./Transactions'));\r\n\r\nconst links = [\r\n  {\r\n    to: Routes.ACCOUNTS,\r\n    titleTranslationKey: 'app.links.accounts',\r\n    exact: true,\r\n  },\r\n  {\r\n    to: Routes.TRANSACTIONS,\r\n    titleTranslationKey: 'app.links.transactions',\r\n  },\r\n];\r\n\r\nconst Accounts: React.FC<WithTranslation> = ({ t }) => (\r\n  <Wrapper>\r\n    <Header />\r\n    <NavbarWrapper>\r\n      <InlineNavbar links={links.map(link => ({ ...link, title: t(link.titleTranslationKey) }))} />\r\n    </NavbarWrapper>\r\n    <Suspense fallback={<SuspenseFallback />}>\r\n      <Switch>\r\n        <Route path={Routes.TRANSACTIONS} component={Transactions} />\r\n        <Route path={Routes.ACCOUNTS} component={AccountsList} />\r\n      </Switch>\r\n    </Suspense>\r\n  </Wrapper>\r\n);\r\n\r\nconst translated = withTranslation();\r\n\r\nexport default translated(Accounts);\r\n","import Accounts from './Accounts';\r\n\r\nexport default Accounts;\r\n"],"sourceRoot":""}