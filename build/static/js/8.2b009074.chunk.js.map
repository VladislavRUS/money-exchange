{"version":3,"sources":["utils/getAccountSymbol.ts","views/Accounts/Transactions/TransactionItem/TransactionItem.styles.ts","views/Accounts/Transactions/TransactionItem/TransactionItem.tsx","views/Accounts/Transactions/Transactions.tsx","views/Accounts/Transactions/index.ts"],"names":["getAccountSymbol","account","currencies","currency","symbol","Wrapper","styled","div","IconWrapper","Description","Key","Value","Title","Details","Time","Sum","Minus","Plus","translated","withTranslation","connect","state","accounts","list","data","transaction","t","fromAccount","find","id","fromAccountId","toAccount","toAccountId","fromAccountSymbol","toAccountSymbol","title","size","color","format","Date","dateTime","formatValueInLocale","i18n","language","fromAccountValue","toAccountValue","ConnectedTransactions","transactions","Fragment","sort","first","second","map","key","Transactions"],"mappings":"wHAGA,kCAAO,IAAMA,EAAmB,SAACC,EAAmBC,GAClD,OAAOA,EAAWD,EAAQE,UAAUC,S,wmDCF/B,IAAMC,EAAUC,IAAOC,IAAV,KAiBPC,EAAcF,IAAOC,IAAV,KAWXE,EAAcH,IAAOC,IAAV,KAQlBG,EAAMJ,IAAOC,IAAV,KAIHI,EAAQL,IAAOC,IAAV,KAIEK,EAAQN,YAAOI,EAAPJ,CAAH,KAILO,EAAUP,IAAOC,IAAV,KAIPO,EAAOR,YAAOK,EAAPL,CAAH,KAEJS,EAAMT,IAAOC,IAAV,KAQHS,EAAQV,YAAOI,EAAPJ,CAAH,KAILW,EAAOX,YAAOK,EAAPL,CAAH,K,2DCFFY,EAJIC,aAIJD,CAFkBE,aAhDT,SAACC,GAAD,MAA+B,CACrDC,SAAUD,EAAMC,SAASC,KACzBrB,WAAYmB,EAAMnB,WAAWsB,QA8CEJ,EAvCgB,SAAC,GAA8C,IAA5CK,EAA2C,EAA3CA,YAAaH,EAA8B,EAA9BA,SAAUpB,EAAoB,EAApBA,WAAYwB,EAAQ,EAARA,EAC/EC,EAAcL,EAASM,MAAK,SAAA3B,GAAO,OAAIA,EAAQ4B,KAAOJ,EAAYK,iBAClEC,EAAYT,EAASM,MAAK,SAAA3B,GAAO,OAAIA,EAAQ4B,KAAOJ,EAAYO,eAEtE,IAAKL,IAAgBI,EACnB,OAAO,KAGT,IAAME,EAAoBjC,YAAiB2B,EAAazB,GAClDgC,EAAkBlC,YAAiB+B,EAAW7B,GAC9CiC,EAAK,UAAMT,EAAE,iCAAR,YAA4CK,EAAUI,OAEjE,OACE,kBAAC9B,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAa4B,KAAM,GAAIC,MAAO,aAEhC,kBAAC5B,EAAD,KACE,kBAACG,EAAD,KAAQuB,GACR,kBAACtB,EAAD,KACE,kBAACC,EAAD,KAAOwB,YAAO,IAAIC,KAAKd,EAAYe,UAAW,wBAGlD,kBAACzB,EAAD,KACE,kBAACC,EAAD,SACIiB,EACDQ,YAAoBC,IAAKC,SAAUlB,EAAYmB,mBAElD,kBAAC3B,EAAD,SACIiB,EACDO,YAAoBC,IAAKC,SAAUlB,EAAYoB,uBC9B3CC,EAFsB1B,aAlBb,SAACC,GAAD,MAA+B,CACrD0B,aAAc1B,EAAM0B,aAAaxB,QAiBEH,EAVE,SAAC,GAAD,IAAG2B,EAAH,EAAGA,aAAH,OACrC,kBAAC,IAAMC,SAAP,KACGD,EACEE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMV,SAAWW,EAAOX,YAChDY,KAAI,SAAA3B,GAAW,OACd,kBAAC,EAAD,CAAiB4B,IAAK5B,EAAYI,GAAIJ,YAAaA,WChB5C6B","file":"static/js/8.2b009074.chunk.js","sourcesContent":["import { ICurrenciesData } from '../store/currencies/types';\nimport { IAccount } from '../store/accounts/types';\n\nexport const getAccountSymbol = (account: IAccount, currencies: ICurrenciesData) => {\n  return currencies[account.currency].symbol;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  transition: box-shadow 0.2s ease;\n\n  &:hover {\n    box-shadow: 0 0 10px -2px rgba(0, 0, 0, 0.2);\n  }\n\n  & + & {\n    margin-top: 10px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background-color: #eceff1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 24px;\n`;\n\nexport const Description = styled.div`\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst Key = styled.div`\n  color: rgb(25, 28, 31);\n`;\n\nconst Value = styled.div`\n  color: rgb(139, 149, 158);\n`;\n\nexport const Title = styled(Key)`\n  margin-bottom: 8px;\n`;\n\nexport const Details = styled.div`\n  font-size: 13px;\n`;\n\nexport const Time = styled(Value)``;\n\nexport const Sum = styled.div`\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-left: auto;\n`;\n\nexport const Minus = styled(Key)`\n  margin-bottom: 8px;\n`;\n\nexport const Plus = styled(Value)``;\n","import React from 'react';\nimport { Wrapper, IconWrapper, Description, Title, Details, Time, Sum, Minus, Plus } from './TransactionItem.styles';\nimport { ITransaction } from '../../../../store/transactions/types';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport { IApplicationState } from '../../../../store';\nimport { getAccountSymbol } from '../../../../utils/getAccountSymbol';\nimport { formatValueInLocale } from '../../../../utils/formatMoneyInLocale';\nimport { i18n } from '../../../../i18n';\nimport { connect } from 'react-redux';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\ninterface ITransactionItemProps {\n  transaction: ITransaction;\n}\n\nconst mapStateToProps = (state: IApplicationState) => ({\n  accounts: state.accounts.list,\n  currencies: state.currencies.data,\n});\n\ntype TStateProps = ReturnType<typeof mapStateToProps>;\n\ntype TProps = TStateProps & ITransactionItemProps & WithTranslation;\n\nexport const TransactionItem: React.FC<TProps> = ({ transaction, accounts, currencies, t }) => {\n  const fromAccount = accounts.find(account => account.id === transaction.fromAccountId);\n  const toAccount = accounts.find(account => account.id === transaction.toAccountId);\n\n  if (!fromAccount || !toAccount) {\n    return null;\n  }\n\n  const fromAccountSymbol = getAccountSymbol(fromAccount, currencies);\n  const toAccountSymbol = getAccountSymbol(toAccount, currencies);\n  const title = `${t('transactions.item.exchangedTo')} ${toAccount.title}`;\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <FiRefreshCw size={20} color={'#8995A2'} />\n      </IconWrapper>\n      <Description>\n        <Title>{title}</Title>\n        <Details>\n          <Time>{format(new Date(transaction.dateTime), 'yyyy-MM-dd, HH:mm')}</Time>\n        </Details>\n      </Description>\n      <Sum>\n        <Minus>\n          -{fromAccountSymbol}\n          {formatValueInLocale(i18n.language, transaction.fromAccountValue)}\n        </Minus>\n        <Plus>\n          -{toAccountSymbol}\n          {formatValueInLocale(i18n.language, transaction.toAccountValue)}\n        </Plus>\n      </Sum>\n    </Wrapper>\n  );\n};\n\nconst translated = withTranslation();\n\nconst ConnectedTransactionItem = connect(mapStateToProps)(TransactionItem);\n\nexport default translated(ConnectedTransactionItem);\n","import React from 'react';\r\nimport { IApplicationState } from '../../../store';\r\nimport { TransactionItem } from './TransactionItem';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: IApplicationState) => ({\r\n  transactions: state.transactions.list,\r\n});\r\n\r\ntype TStateProps = ReturnType<typeof mapStateToProps>;\r\n\r\ntype TProps = TStateProps;\r\n\r\nconst Transactions: React.FC<TProps> = ({ transactions }) => (\r\n  <React.Fragment>\r\n    {transactions\r\n      .sort((first, second) => first.dateTime - second.dateTime)\r\n      .map(transaction => (\r\n        <TransactionItem key={transaction.id} transaction={transaction} />\r\n      ))}\r\n  </React.Fragment>\r\n);\r\n\r\nexport const ConnectedTransactions = connect(mapStateToProps)(Transactions);\r\n\r\nexport default ConnectedTransactions;\r\n","import Transactions from './Transactions';\r\n\r\nexport default Transactions;\r\n"],"sourceRoot":""}