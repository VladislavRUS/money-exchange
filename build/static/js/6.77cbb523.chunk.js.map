{"version":3,"sources":["components/InlineNavbar/InlineNavbar.styles.ts","components/InlineNavbar/InlineNavbar.tsx","components/InlineNavbar/index.ts","assets/icons/mc_symbol.svg","views/Cards/Cards.styles.ts","views/Cards/PhysicalCards/PhysicalCards.styles.ts","views/Cards/CardItem/CardItem.styles.ts","views/Cards/CardItem/CardItem.tsx","views/Cards/PhysicalCards/PhysicalCards.tsx","views/Cards/Cards.tsx","views/Cards/index.ts"],"names":["Wrapper","styled","div","LinkContent","StyledLink","NavLink","InlineNavbar","links","map","link","to","key","exact","title","module","exports","Title","h2","NavbarWrapper","Header","Spent","Avatar","props","imageUrl","Owner","CardInformation","Symbol","mastercardIcon","Number","CardItem","card","spent","avatarUrl","owner","lastDigits","ConnectedPhysicalCards","connect","state","cards","list","id","Routes","CARDS","titleTranslationKey","Cards","t","this","fallback","path","component","PhysicalCards","React","Component","translated","withTranslation"],"mappings":"skCAGO,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAcF,IAAOC,IAAV,KAKXE,EAAaH,YAAOI,IAAPJ,CAAH,IAgCjBE,GCxBSG,EAVoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,kBAACP,EAAD,KACGO,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAACL,EAAD,CAAYM,GAAID,EAAKC,GAAIC,IAAKF,EAAKC,GAAIE,MAAOH,EAAKG,OACjD,kBAACT,EAAD,KAAcM,EAAKI,aCjB3B,mC,oBCAAC,EAAOC,QAAU,IAA0B,uC,kZCEpC,IAAMf,EAAUC,IAAOC,IAAV,KAIPc,EAAQf,IAAOgB,GAAV,KAILC,EAAgBjB,IAAOC,IAAV,K,oLCRnB,IAAMF,EAAUC,IAAOC,IAAV,K,+3CCCb,IAAMF,EAAUC,IAAOC,IAAV,KAaPiB,EAASlB,IAAOC,IAAV,KAMNkB,EAAQnB,IAAOC,IAAV,KAOLmB,EAASpB,IAAOC,IAAV,KAIO,SAAAoB,GAAK,OAAIA,EAAMC,YAK5BC,EAAQvB,IAAOC,IAAV,KAMLuB,EAAkBxB,IAAOC,IAAV,KAKfwB,EAASzB,IAAOC,IAAV,IAIOyB,KAIbC,EAAS3B,IAAOC,IAAV,KCnCJ2B,EAd4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACzC,kBAAC,EAAD,KACE,kBAACX,EAAD,KACE,kBAACC,EAAD,SAASU,EAAKC,OACd,kBAACV,EAAD,CAAQE,SAAUO,EAAKE,aAEzB,kBAACR,EAAD,KAAQM,EAAKG,OACb,kBAACR,EAAD,KACE,kBAACC,EAAD,MACA,kBAAC,EAAD,YAAaI,EAAKI,e,QCKTC,EAFgBC,aAdP,SAACC,GAAD,MAA+B,CACrDC,MAAOD,EAAMC,MAAMC,QAaUH,EARc,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAC3C,kBAAC,EAAD,KACGA,EAAM9B,KAAI,SAAAsB,GAAI,OACb,kBAAC,EAAD,CAAUnB,IAAKmB,EAAKU,GAAIV,KAAMA,W,QCJ9BvB,EAAQ,CACZ,CACEG,GAAI+B,IAAOC,MACXC,oBAAqB,0BACrB/B,OAAO,IAILgC,E,iLACM,IACAC,EAAMC,KAAKxB,MAAXuB,EAER,OACE,kBAAC7C,EAAD,KACE,kBAACgB,EAAD,KAAQ6B,EAAE,oBACV,kBAAC3B,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAcC,MAAOA,EAAMC,KAAI,SAAAC,GAAI,sBAAUA,EAAV,CAAgBI,MAAOgC,EAAEpC,EAAKkC,6BAEnE,kBAAC,WAAD,CAAUI,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMP,IAAOC,MAAOO,UAAWC,W,GAZ9BC,IAAMC,WAsBXC,EAFIC,aAEJD,CAAWT,GCvCXA","file":"static/js/6.77cbb523.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid rgb(206, 213, 219);\r\n`;\r\n\r\nexport const LinkContent = styled.div`\r\n  font-weight: 400;\r\n  color: rgb(139, 149, 158);\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  height: 58px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -1px;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background-color: rgb(235, 0, 141);\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 32px;\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.active {\r\n    &::after {\r\n      opacity: 1;\r\n    }\r\n\r\n    ${LinkContent} {\r\n      font-weight: 500;\r\n\r\n      color: rgb(25, 28, 31);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, StyledLink, LinkContent } from './InlineNavbar.styles';\r\n\r\nexport interface INavbarLink {\r\n  to: string;\r\n  title: string;\r\n  exact?: boolean;\r\n}\r\n\r\ninterface IInlineNavbarProps {\r\n  links: INavbarLink[];\r\n}\r\n\r\nconst InlineNavbar: React.FC<IInlineNavbarProps> = ({ links }) => (\r\n  <Wrapper>\r\n    {links.map(link => (\r\n      <StyledLink to={link.to} key={link.to} exact={link.exact}>\r\n        <LinkContent>{link.title}</LinkContent>\r\n      </StyledLink>\r\n    ))}\r\n  </Wrapper>\r\n);\r\n\r\nexport default InlineNavbar;\r\n","import InlineNavbar from './InlineNavbar';\r\n\r\nexport { InlineNavbar };\r\n","module.exports = __webpack_public_path__ + \"static/media/mc_symbol.543bc93b.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 0 16px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 42px;\n`;\n\nexport const NavbarWrapper = styled.div`\n  margin: 24px 0 40px 0;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n","import styled from 'styled-components';\nimport mastercardIcon from '../../../assets/icons/mc_symbol.svg';\n\nexport const Wrapper = styled.div`\n  padding: 25px;\n  background-color: #fff;\n  cursor: pointer;\n  box-shadow: 0 5px 15px -2px rgba(0, 0, 0, 0.15);\n\n  transition: box-shadow 0.2s ease;\n\n  &:hover {\n    box-shadow: 0 3px 15px -2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const Spent = styled.div`\n  color: rgb(139, 149, 158);\n  padding-bottom: 10px;\n  border-bottom: 2px solid rgba(0, 117, 235, 0.2);\n  min-width: 60px;\n`;\n\nexport const Avatar = styled.div<{ imageUrl: string }>`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background-image: url(${props => props.imageUrl});\n  background-size: cover;\n  margin-left: auto;\n`;\n\nexport const Owner = styled.div`\n  font-size: 28px;\n  margin-bottom: 15px;\n  color: rgb(25, 28, 31);\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Symbol = styled.div`\n  margin-right: 10px;\n  width: 19px;\n  height: 12px;\n  background-image: url(${mastercardIcon});\n  background-size: contain;\n`;\n\nexport const Number = styled.div`\n  color: rgb(139, 149, 158);\n`;\n","import React from 'react';\nimport { Wrapper, Header, Spent, Avatar, Owner, CardInformation, Symbol, Number } from './CardItem.styles';\nimport { ICard } from '../../../store/cards/types';\n\ninterface ICardItemProps {\n  card: ICard;\n}\n\nconst CardItem: React.FC<ICardItemProps> = ({ card }) => (\n  <Wrapper>\n    <Header>\n      <Spent>${card.spent}</Spent>\n      <Avatar imageUrl={card.avatarUrl} />\n    </Header>\n    <Owner>{card.owner}</Owner>\n    <CardInformation>\n      <Symbol />\n      <Number>* * {card.lastDigits}</Number>\n    </CardInformation>\n  </Wrapper>\n);\n\nexport default CardItem;\n","import React from 'react';\nimport { Wrapper } from './PhysicalCards.styles';\nimport { IApplicationState } from '../../../store';\nimport { CardItem } from '../CardItem';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state: IApplicationState) => ({\n  cards: state.cards.list,\n});\n\ntype TStateProps = ReturnType<typeof mapStateToProps>;\n\nconst PhysicalCards: React.FC<TStateProps> = ({ cards }) => (\n  <Wrapper>\n    {cards.map(card => (\n      <CardItem key={card.id} card={card} />\n    ))}\n  </Wrapper>\n);\n\nconst ConnectedPhysicalCards = connect(mapStateToProps)(PhysicalCards);\n\nexport default ConnectedPhysicalCards;\n","import React, { Suspense } from 'react';\r\nimport { Wrapper, Title, NavbarWrapper } from './Cards.styles';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { Routes } from '../../constants/Routes';\r\nimport { InlineNavbar } from '../../components/InlineNavbar';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { PhysicalCards } from './PhysicalCards';\r\nimport { SuspenseFallback } from '../../components/SuspenceFallback';\r\n\r\ntype TProps = WithTranslation;\r\n\r\nconst links = [\r\n  {\r\n    to: Routes.CARDS,\r\n    titleTranslationKey: 'app.links.physicalCards',\r\n    exact: true,\r\n  },\r\n];\r\n\r\nclass Cards extends React.Component<TProps> {\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Title>{t('app.links.cards')}</Title>\r\n        <NavbarWrapper>\r\n          <InlineNavbar links={links.map(link => ({ ...link, title: t(link.titleTranslationKey) }))} />\r\n        </NavbarWrapper>\r\n        <Suspense fallback={<SuspenseFallback />}>\r\n          <Switch>\r\n            <Route path={Routes.CARDS} component={PhysicalCards} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst translated = withTranslation();\r\n\r\nexport default translated(Cards);\r\n","import Cards from './Cards';\r\n\r\nexport default Cards;\r\n"],"sourceRoot":""}